package com.norbertsram.minnesota.io.csv;

import static org.junit.Assert.assertTrue;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.Collection;

import org.junit.Test;

import com.google.common.collect.Iterators;
import com.google.common.primitives.Doubles;
import com.norbertsram.ecgapi.EcgLead;
import com.norbertsram.ecgapi.EcgProperty;
import com.norbertsram.ecgapi.model.EcgData;
import com.norbertsram.ecgapi.model.EcgLeadValue;
import com.norbertsram.ecgapi.model.EcgPatientData;

public class CsvParserTest {

	private static final String CSV_HEADER = "MTuid,ECG_HR_BEAT,ECG_QRS_INT_MEAN,ECG_QRS_AXIS,ECG_QRS_AXIS_3D,ECG_V1_P1_INT,ECG_V1_P2_INT,ECG_V1_P1_AMP,ECG_V1_P2_AMP,ECG_V1_P1_AREA,ECG_V1_P2_AREA,ECG_P_INT_I,ECG_PQ_INT_I,ECG_QR_INT_I,ECG_QRS_INT_I,ECG_Q_INT_I,ECG_R_INT_I,ECG_S_INT_I,ECG_QT_INT_I,ECG_P_AMP_I,ECG_Q_AMP_I,ECG_R_AMP_I,ECG_R1_AMP_I,ECG_S_AMP_I,ECG_J_AMP_I,ECG_J80_AMP_I,ECG_J100_AMP_I,ECG_T_AMP_I,ECG_P_AREA_I,ECG_R_AREA_I,ECG_T_AREA_I,ECG_QR_RATIO_I,ECG_RS_RATIO_I,ECG_RR1_RATIO_I,ECG_TR_RATIO_I,ECG_QTC_I,ECG_ST_DEV_I,ECG_QRS_PTP_I,ECG_QRS_BIAS_I,ECG_P_INT_II,ECG_PQ_INT_II,ECG_QR_INT_II,ECG_QRS_INT_II,ECG_Q_INT_II,ECG_R_INT_II,ECG_S_INT_II,ECG_QT_INT_II,ECG_P_AMP_II,ECG_Q_AMP_II,ECG_R_AMP_II,ECG_R1_AMP_II,ECG_S_AMP_II,ECG_J_AMP_II,ECG_J80_AMP_II,ECG_J100_AMP_II,ECG_T_AMP_II,ECG_P_AREA_II,ECG_R_AREA_II,ECG_T_AREA_II,ECG_QR_RATIO_II,ECG_RS_RATIO_II,ECG_RR1_RATIO_II,ECG_TR_RATIO_II,ECG_QTC_II,ECG_ST_DEV_II,ECG_QRS_PTP_II,ECG_QRS_BIAS_II,ECG_P_INT_III,ECG_PQ_INT_III,ECG_QR_INT_III,ECG_QRS_INT_III,ECG_Q_INT_III,ECG_R_INT_III,ECG_S_INT_III,ECG_QT_INT_III,ECG_P_AMP_III,ECG_Q_AMP_III,ECG_R_AMP_III,ECG_R1_AMP_III,ECG_S_AMP_III,ECG_J_AMP_III,ECG_J80_AMP_III,ECG_J100_AMP_III,ECG_T_AMP_III,ECG_P_AREA_III,ECG_R_AREA_III,ECG_T_AREA_III,ECG_QR_RATIO_III,ECG_RS_RATIO_III,ECG_RR1_RATIO_III,ECG_TR_RATIO_III,ECG_QTC_III,ECG_ST_DEV_III,ECG_QRS_PTP_III,ECG_QRS_BIAS_III,ECG_P_INT_aVR,ECG_PQ_INT_aVR,ECG_QR_INT_aVR,ECG_QRS_INT_aVR,ECG_Q_INT_aVR,ECG_R_INT_aVR,ECG_S_INT_aVR,ECG_QT_INT_aVR,ECG_P_AMP_aVR,ECG_Q_AMP_aVR,ECG_R_AMP_aVR,ECG_R1_AMP_aVR,ECG_S_AMP_aVR,ECG_J_AMP_aVR,ECG_J80_AMP_aVR,ECG_J100_AMP_aVR,ECG_T_AMP_aVR,ECG_P_AREA_aVR,ECG_R_AREA_aVR,ECG_T_AREA_aVR,ECG_QR_RATIO_aVR,ECG_RS_RATIO_aVR,ECG_RR1_RATIO_aVR,ECG_TR_RATIO_aVR,ECG_QTC_aVR,ECG_ST_DEV_aVR,ECG_QRS_PTP_aVR,ECG_QRS_BIAS_aVR,ECG_P_INT_aVL,ECG_PQ_INT_aVL,ECG_QR_INT_aVL,ECG_QRS_INT_aVL,ECG_Q_INT_aVL,ECG_R_INT_aVL,ECG_S_INT_aVL,ECG_QT_INT_aVL,ECG_P_AMP_aVL,ECG_Q_AMP_aVL,ECG_R_AMP_aVL,ECG_R1_AMP_aVL,ECG_S_AMP_aVL,ECG_J_AMP_aVL,ECG_J80_AMP_aVL,ECG_J100_AMP_aVL,ECG_T_AMP_aVL,ECG_P_AREA_aVL,ECG_R_AREA_aVL,ECG_T_AREA_aVL,ECG_QR_RATIO_aVL,ECG_RS_RATIO_aVL,ECG_RR1_RATIO_aVL,ECG_TR_RATIO_aVL,ECG_QTC_aVL,ECG_ST_DEV_aVL,ECG_QRS_PTP_aVL,ECG_QRS_BIAS_aVL,ECG_P_INT_aVF,ECG_PQ_INT_aVF,ECG_QR_INT_aVF,ECG_QRS_INT_aVF,ECG_Q_INT_aVF,ECG_R_INT_aVF,ECG_S_INT_aVF,ECG_QT_INT_aVF,ECG_P_AMP_aVF,ECG_Q_AMP_aVF,ECG_R_AMP_aVF,ECG_R1_AMP_aVF,ECG_S_AMP_aVF,ECG_J_AMP_aVF,ECG_J80_AMP_aVF,ECG_J100_AMP_aVF,ECG_T_AMP_aVF,ECG_P_AREA_aVF,ECG_R_AREA_aVF,ECG_T_AREA_aVF,ECG_QR_RATIO_aVF,ECG_RS_RATIO_aVF,ECG_RR1_RATIO_aVF,ECG_TR_RATIO_aVF,ECG_QTC_aVF,ECG_ST_DEV_aVF,ECG_QRS_PTP_aVF,ECG_QRS_BIAS_aVF,ECG_P_INT_V1,ECG_PQ_INT_V1,ECG_QR_INT_V1,ECG_QRS_INT_V1,ECG_Q_INT_V1,ECG_R_INT_V1,ECG_S_INT_V1,ECG_QT_INT_V1,ECG_P_AMP_V1,ECG_Q_AMP_V1,ECG_R_AMP_V1,ECG_R1_AMP_V1,ECG_S_AMP_V1,ECG_J_AMP_V1,ECG_J80_AMP_V1,ECG_J100_AMP_V1,ECG_T_AMP_V1,ECG_P_AREA_V1,ECG_R_AREA_V1,ECG_T_AREA_V1,ECG_QR_RATIO_V1,ECG_RS_RATIO_V1,ECG_RR1_RATIO_V1,ECG_TR_RATIO_V1,ECG_QTC_V1,ECG_ST_DEV_V1,ECG_QRS_PTP_V1,ECG_QRS_BIAS_V1,ECG_P_INT_V2,ECG_PQ_INT_V2,ECG_QR_INT_V2,ECG_QRS_INT_V2,ECG_Q_INT_V2,ECG_R_INT_V2,ECG_S_INT_V2,ECG_QT_INT_V2,ECG_P_AMP_V2,ECG_Q_AMP_V2,ECG_R_AMP_V2,ECG_R1_AMP_V2,ECG_S_AMP_V2,ECG_J_AMP_V2,ECG_J80_AMP_V2,ECG_J100_AMP_V2,ECG_T_AMP_V2,ECG_P_AREA_V2,ECG_R_AREA_V2,ECG_T_AREA_V2,ECG_QR_RATIO_V2,ECG_RS_RATIO_V2,ECG_RR1_RATIO_V2,ECG_TR_RATIO_V2,ECG_QTC_V2,ECG_ST_DEV_V2,ECG_QRS_PTP_V2,ECG_QRS_BIAS_V2,ECG_P_INT_V3,ECG_PQ_INT_V3,ECG_QR_INT_V3,ECG_QRS_INT_V3,ECG_Q_INT_V3,ECG_R_INT_V3,ECG_S_INT_V3,ECG_QT_INT_V3,ECG_P_AMP_V3,ECG_Q_AMP_V3,ECG_R_AMP_V3,ECG_R1_AMP_V3,ECG_S_AMP_V3,ECG_J_AMP_V3,ECG_J80_AMP_V3,ECG_J100_AMP_V3,ECG_T_AMP_V3,ECG_P_AREA_V3,ECG_R_AREA_V3,ECG_T_AREA_V3,ECG_QR_RATIO_V3,ECG_RS_RATIO_V3,ECG_RR1_RATIO_V3,ECG_TR_RATIO_V3,ECG_QTC_V3,ECG_ST_DEV_V3,ECG_QRS_PTP_V3,ECG_QRS_BIAS_V3,ECG_P_INT_V4,ECG_PQ_INT_V4,ECG_QR_INT_V4,ECG_QRS_INT_V4,ECG_Q_INT_V4,ECG_R_INT_V4,ECG_S_INT_V4,ECG_QT_INT_V4,ECG_P_AMP_V4,ECG_Q_AMP_V4,ECG_R_AMP_V4,ECG_R1_AMP_V4,ECG_S_AMP_V4,ECG_J_AMP_V4,ECG_J80_AMP_V4,ECG_J100_AMP_V4,ECG_T_AMP_V4,ECG_P_AREA_V4,ECG_R_AREA_V4,ECG_T_AREA_V4,ECG_QR_RATIO_V4,ECG_RS_RATIO_V4,ECG_RR1_RATIO_V4,ECG_TR_RATIO_V4,ECG_QTC_V4,ECG_ST_DEV_V4,ECG_QRS_PTP_V4,ECG_QRS_BIAS_V4,ECG_P_INT_V5,ECG_PQ_INT_V5,ECG_QR_INT_V5,ECG_QRS_INT_V5,ECG_Q_INT_V5,ECG_R_INT_V5,ECG_S_INT_V5,ECG_QT_INT_V5,ECG_P_AMP_V5,ECG_Q_AMP_V5,ECG_R_AMP_V5,ECG_R1_AMP_V5,ECG_S_AMP_V5,ECG_J_AMP_V5,ECG_J80_AMP_V5,ECG_J100_AMP_V5,ECG_T_AMP_V5,ECG_P_AREA_V5,ECG_R_AREA_V5,ECG_T_AREA_V5,ECG_QR_RATIO_V5,ECG_RS_RATIO_V5,ECG_RR1_RATIO_V5,ECG_TR_RATIO_V5,ECG_QTC_V5,ECG_ST_DEV_V5,ECG_QRS_PTP_V5,ECG_QRS_BIAS_V5,ECG_P_INT_V6,ECG_PQ_INT_V6,ECG_QR_INT_V6,ECG_QRS_INT_V6,ECG_Q_INT_V6,ECG_R_INT_V6,ECG_S_INT_V6,ECG_QT_INT_V6,ECG_P_AMP_V6,ECG_Q_AMP_V6,ECG_R_AMP_V6,ECG_R1_AMP_V6,ECG_S_AMP_V6,ECG_J_AMP_V6,ECG_J80_AMP_V6,ECG_J100_AMP_V6,ECG_T_AMP_V6,ECG_P_AREA_V6,ECG_R_AREA_V6,ECG_T_AREA_V6,ECG_QR_RATIO_V6,ECG_RS_RATIO_V6,ECG_RR1_RATIO_V6,ECG_TR_RATIO_V6,ECG_QTC_V6,ECG_ST_DEV_V6,ECG_QRS_PTP_V6,ECG_QRS_BIAS_V6";
	private static final String CSV_ROW = "INCART I01,95.5414012739,0.09675,-0.0119012667,0.3626689877,0.087,0.013,-0.1299293211,-0.0005211311,0.0598254385,0.0418538932,0.1,0.138,0.047,0.097,0.028,0.067,0.096,0.333,0.1374459375,-0.179410572,1.1155185841,0,0,-0.0699395224,0.0146637455,0.0441684293,0.247381327,0.1041350742,0.3331452168,0.1104436626,0.1608315402,,,0.216716243,0.4202080922,0,1.3004700437,0.3906587393,0.1,0.14,0.049,0.104,0.024,0.035,0.038,0.337,0.193342267,-0.0952426337,0.7675822162,0,-0.0924803357,-0.0118663396,0.058279639,0.1238915479,0.2382606638,0.1237915653,0.4561913537,0.1915772306,0.1516722815,6.7900938847,,0.3083151417,0.4252556369,0,0.990270997,0.1883536314,0.1,0.141,0.093,0.094,0.094,0.093,0.093,0.33,0.0114154106,-0.3830077351,0,0,-0.3830077351,0.0266333622,0.0107485967,0.0540987151,-0.0007694358,0.0404180587,0.0931829843,0.0324570639,,,,,0.4164224337,0,0.4943984427,-0.1587236001,0.1,0.14,0.014,0.097,0.097,0.023,0.075,0.333,-0.1636417623,0,0.1315667066,0,-0.931442116,0.0139190379,-0.0638936303,-0.0798908366,-0.2374052279,0.1134633404,0.0809346981,0.1425815805,,0.1461697964,,1.5309071519,0.4202080922,0,1.0365443265,-0.3114681701,0.1,0.14,0.043,0.097,0.026,0.071,0.097,0.333,0.0424334108,-0.0950619171,0.7478478502,0,0,-0.0587588356,-0.0193084045,0.0212576189,0.0986510395,0.0566148875,0.2209091788,0.0475878445,0.1140281362,,,0.1183333402,0.4202080922,0,0.8847342115,0.2759945312,0.1,0.14,0.046,0.097,0.097,0.055,0.042,0.333,0.1164504096,0,0.271025765,0,-0.2803748808,0.0353705222,0.0536421036,0.0770562472,0.1282618935,0.0540535768,0.135795458,0.1104491804,,1.0171433302,,0.4732461266,0.4202080922,0,0.6452282611,-0.0070284765,0.1,0.14,0.023,0.101,0.101,0.035,0.064,0.337,-0.0777553998,0,0.3003351804,0.093757999,-0.3691715156,0.0609274853,0.0201711956,0.0414141287,-0.0491751949,0.0653295684,0.178565117,0.0384214165,,0.7068300106,,0.1884529435,0.4252556369,0,0.6758312749,-0.0682459589,0.1,0.141,0.04,0.094,0.094,0.076,0.039,0.33,0.0105467378,0,0.7549504661,0,-0.0619701367,-0.0187151184,0.0192605479,0.0719069569,0.2328613047,0.0297007658,0.254725292,0.1037542602,,,,0.3188187188,0.4164224337,0,0.8208549227,0.2866818871,0.1,0.143,0.037,0.092,0.092,0.062,0.03,0.328,0.0535377206,0,1.1712650474,0,-0.0721947125,-0.0283311889,0.0394654378,0.1240471928,0.3260588271,0.0352338542,0.4377391848,0.1533429343,,16.2236957062,,0.2783817615,0.4138986614,0,1.2902280746,0.4796794106,0.1,0.14,0.042,0.093,0.093,0.062,0.028,0.333,0.0865495058,0,1.3693308181,0,-0.1070978378,-0.0284559379,0.0394283036,0.0836219173,0.3660788794,0.0505681685,0.4888265637,0.1774763595,,12.8411221489,,0.2673414449,0.4202080922,0,1.4965345305,0.5391929749,0.1,0.143,0.042,0.097,0.021,0.037,0.039,0.333,0.1025348689,-0.0895920463,0.9109471261,0,-0.1125764254,-0.0147573122,0.044075238,0.0571941147,0.1829753242,0.0688653689,0.5467285842,0.1177967521,0.104299814,8.0918107249,,0.1867440093,0.4202080922,0,1.0310852102,0.345474151,0.1,0.137,0.049,0.1,0.026,0.07,0.098,0.334,0.0801265984,-0.1339994109,0.9843225975,0,0,-0.0244990287,0.0101345582,0.02233337,0.1063918611,0.0605052736,0.3114351639,0.0730168337,0.1585319872,,,0.1071627184,0.4214699784,0,1.1295609142,0.3685306528";
	private static final String CSV_TEST_INPUT = CSV_HEADER + "\n" + CSV_ROW;
	private static final EcgLeadValue expectedLeadI = new EcgLeadValue(EcgLead.I); 
	private static final EcgLeadValue expectedLeadV6 = new EcgLeadValue(EcgLead.V6); 
	
	static {
		expectedLeadI.setValue(EcgProperty.INTERVAL_P, 0.1);
		expectedLeadI.setValue(EcgProperty.INTERVAL_PQ, 0.138);
		expectedLeadI.setValue(EcgProperty.INTERVAL_QR, 0.047);
		expectedLeadI.setValue(EcgProperty.INTERVAL_QRS, 0.097);
		expectedLeadI.setValue(EcgProperty.INTERVAL_Q, 0.028);
		expectedLeadI.setValue(EcgProperty.INTERVAL_R, 0.067);
		expectedLeadI.setValue(EcgProperty.INTERVAL_S, 0.096);
		expectedLeadI.setValue(EcgProperty.INTERVAL_QT, 0.333);
		expectedLeadI.setValue(EcgProperty.AMPLITUDE_P, 0.1374459375);
		expectedLeadI.setValue(EcgProperty.AMPLITUDE_Q, -0.179410572);
		expectedLeadI.setValue(EcgProperty.AMPLITUDE_R, 1.1155185841);
		expectedLeadI.setValue(EcgProperty.AMPLITUDE_R1, 0.0);
		expectedLeadI.setValue(EcgProperty.AMPLITUDE_S, 0.0);
		expectedLeadI.setValue(EcgProperty.AMPLITUDE_J, -0.0699395224);
		expectedLeadI.setValue(EcgProperty.AMPLITUDE_J80, 0.0146637455);
		expectedLeadI.setValue(EcgProperty.AMPLITUDE_J100, 0.0441684293);
		expectedLeadI.setValue(EcgProperty.AMPLITUDE_T, 0.247381327);
		expectedLeadI.setValue(EcgProperty.AREA_P, 0.1041350742);
		expectedLeadI.setValue(EcgProperty.AREA_R, 0.3331452168);
		expectedLeadI.setValue(EcgProperty.AREA_T, 0.1104436626);
		expectedLeadI.setValue(EcgProperty.RATIO_QR, 0.1608315402);
		expectedLeadI.setValue(EcgProperty.RATIO_RS, Double.NaN);
		expectedLeadI.setValue(EcgProperty.RATIO_RR1, Double.NaN);
		expectedLeadI.setValue(EcgProperty.RATIO_TR, 0.216716243);
		expectedLeadI.setValue(EcgProperty.VALUE_QTC, 0.4202080922);
		expectedLeadI.setValue(EcgProperty.DEVIATION_ST, 0.0);
		expectedLeadI.setValue(EcgProperty.VALUE_QRS_PEAK_TO_PEAK, 1.3004700437);
		expectedLeadI.setValue(EcgProperty.VALUE_QRS_BIAS, 0.3906587393);

		expectedLeadV6.setValue(EcgProperty.INTERVAL_P, 0.1);
		expectedLeadV6.setValue(EcgProperty.INTERVAL_PQ, 0.137);
		expectedLeadV6.setValue(EcgProperty.INTERVAL_QR, 0.049);
		expectedLeadV6.setValue(EcgProperty.INTERVAL_QRS, 0.1);
		expectedLeadV6.setValue(EcgProperty.INTERVAL_Q, 0.026);
		expectedLeadV6.setValue(EcgProperty.INTERVAL_R, 0.07);
		expectedLeadV6.setValue(EcgProperty.INTERVAL_S, 0.098);
		expectedLeadV6.setValue(EcgProperty.INTERVAL_QT, 0.334);
		expectedLeadV6.setValue(EcgProperty.AMPLITUDE_P, 0.0801265984);
		expectedLeadV6.setValue(EcgProperty.AMPLITUDE_Q, -0.1339994109);
		expectedLeadV6.setValue(EcgProperty.AMPLITUDE_R, 0.9843225975);
		expectedLeadV6.setValue(EcgProperty.AMPLITUDE_R1, 0.0);
		expectedLeadV6.setValue(EcgProperty.AMPLITUDE_S, 0.0);
		expectedLeadV6.setValue(EcgProperty.AMPLITUDE_J, -0.0244990287);
		expectedLeadV6.setValue(EcgProperty.AMPLITUDE_J80, 0.0101345582);
		expectedLeadV6.setValue(EcgProperty.AMPLITUDE_J100, 0.02233337);
		expectedLeadV6.setValue(EcgProperty.AMPLITUDE_T, 0.1063918611);
		expectedLeadV6.setValue(EcgProperty.AREA_P, 0.0605052736);
		expectedLeadV6.setValue(EcgProperty.AREA_R, 0.3114351639);
		expectedLeadV6.setValue(EcgProperty.AREA_T, 0.0730168337);
		expectedLeadV6.setValue(EcgProperty.RATIO_QR, 0.1585319872);
		expectedLeadV6.setValue(EcgProperty.RATIO_RS, Double.NaN);
		expectedLeadV6.setValue(EcgProperty.RATIO_RR1, Double.NaN);
		expectedLeadV6.setValue(EcgProperty.RATIO_TR, 0.1071627184);
		expectedLeadV6.setValue(EcgProperty.VALUE_QTC, 0.4214699784);
		expectedLeadV6.setValue(EcgProperty.DEVIATION_ST, 0.0);
		expectedLeadV6.setValue(EcgProperty.VALUE_QRS_PEAK_TO_PEAK, 1.1295609142);
		expectedLeadV6.setValue(EcgProperty.VALUE_QRS_BIAS, 0.3685306528);
	}
	
	@Test
	public void testParsing() {
		InputStream input = new ByteArrayInputStream(CSV_TEST_INPUT.getBytes());

		CsvParser parser = new CsvParser(input);
		EcgData parsedData = parser.read();
		assertTrue(parsedData != null);
		
		Collection<EcgPatientData> patientData = parsedData.getData();
		assertTrue(patientData.size() == 1);
		EcgPatientData onlyElement = Iterators.getOnlyElement(patientData.iterator());
		
		String patientId = onlyElement.getPatientId();
		assertTrue("INCART I01".equals(patientId));
		
		EcgLeadValue ecgLeadValue = onlyElement.getEcgLeadValue(EcgLead.I);
		checkEcgLeadValueEquality(expectedLeadI, ecgLeadValue);

		ecgLeadValue = onlyElement.getEcgLeadValue(EcgLead.V6);
		checkEcgLeadValueEquality(expectedLeadV6, ecgLeadValue);
	}
	
	private void checkEcgLeadValueEquality(EcgLeadValue expected, EcgLeadValue got) {
		for (EcgProperty property : EcgProperty.values()) {
			Double expectedValue = expected.getValue(property);
			Double gotValue = got.getValue(property);
			boolean areEqual = Doubles.compare(expectedValue, gotValue) == 0;
			String message = "Property: " + property.toString() + " - expected: " + expectedValue + " , got value: " + gotValue;
			assertTrue(message, areEqual);
		}
	}

}
